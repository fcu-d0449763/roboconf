# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2017-05-12 20:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto
import users.models


class Migration(migrations.Migration):

    initial = True

    replaces = [('users', '0001_initial'), ('users', '0002_auto_20151003_0935'), ('users', '0003_auto_20151227_0016'), ('users', '0004_auto_20160417_0435'), ('users', '0005_auto_20160428_2230'), ('users', '0006_auto_20160501_2315'), ('users', '0007_auto_20170508_0251'), ('users', '0001_initial_squashed_0007_auto_20170508_0251'), ('users', '0002_add_fields_replace_null'), ('users', '0003_auto_20170513_0414')]

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical', models.BooleanField(default=False, verbose_name='醫療')),
                ('legal', models.BooleanField(default=False, verbose_name='法律')),
                ('pr', models.BooleanField(default=False, verbose_name='公關')),
                ('other', models.CharField(blank=True, default='', help_text='other special abilities', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='GroupCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('is_visible', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(related_name='categories', to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english', models.BooleanField(default=False, verbose_name='英語')),
                ('japanese', models.BooleanField(default=False, verbose_name='日語')),
                ('taiwanese', models.BooleanField(default=False, verbose_name='台語')),
                ('cantonese', models.BooleanField(default=False, verbose_name='粵語')),
                ('other', models.CharField(blank=True, default='', help_text='other language abilities', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='RegisterToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=12)),
                ('valid', models.BooleanField(default=True)),
                ('username', models.CharField(blank=True, default='', max_length=255)),
                ('display_name', models.CharField(blank=True, default='', max_length=255)),
                ('email', models.CharField(blank=True, default='', max_length=255)),
                ('groups', models.ManyToManyField(related_name='tokens', to='auth.Group')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(blank=True, upload_to=users.models.photo_path)),
                ('display_name', models.CharField(blank=True, default='', max_length=32)),
                ('eng_name', models.CharField(blank=True, default='', max_length=32)),
                ('title', models.CharField(blank=True, default='', max_length=32)),
                ('school', models.CharField(blank=True, default='', help_text='school or company', max_length=32)),
                ('grade', models.CharField(blank=True, default='', help_text='department and grade / position', max_length=32)),
                ('phone', models.CharField(blank=True, default='', max_length=16)),
                ('twenty', models.NullBooleanField(default=True, help_text='if age >= 20')),
                ('certificate', models.BooleanField(default=True, help_text='need for certificate')),
                ('require_printed_cert', models.BooleanField(default=False, help_text='require printed certificate')),
                ('cel_dinner', models.BooleanField(default=False, help_text='need for celebratory dinner')),
                ('prev_worker', models.BooleanField(default=False, help_text='if is previously a conference staff')),
                ('on_site', models.NullBooleanField(default=True, help_text='if is onsite volunteer')),
                ('residence', models.CharField(blank=True, default='', help_text='residence', max_length=32, null=True)),
                ('shirt_size', models.CharField(blank=True, default='', help_text='T-shirt size', max_length=8, null=True)),
                ('diet', models.CharField(blank=True, default='', max_length=8, null=True)),
                ('transportation_aid', models.BooleanField(default=False, help_text='if need transportation fee aid')),
                ('transportation_hr', models.BooleanField(default=False, help_text='if transportation time >= 1hr')),
                ('transportation', models.CharField(blank=True, default='', help_text='transportation method', max_length=128)),
                ('transportation_fee', models.CharField(blank=True, default='', help_text='transportation fee', max_length=128)),
                ('accom', models.IntegerField(choices=[(0, 'Not needed'), (1, 'Either'), (2, 'Needed')], default=2, help_text='need for accommodation')),
                ('roommate', models.CharField(blank=True, default='', help_text='requested roommate', max_length=32)),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'Male'), (2, 'Female'), (9, 'Other')], null=True)),
                ('personal_id', models.CharField(blank=True, default='', help_text='id number, for insurance', max_length=16)),
                ('ice_contact', models.CharField(blank=True, default='', help_text='Emergency contact info', max_length=32)),
                ('ice_phone', models.CharField(blank=True, default='', help_text='emergency contact number', max_length=32)),
                ('birthday', models.DateField(blank=True, help_text='birthday, for insurance', null=True)),
                ('bio', models.TextField(blank=True, default='', help_text='biography', max_length=512)),
                ('comment', models.TextField(blank=True, default='', max_length=512)),
                ('abilities', models.OneToOneField(blank=True, default=None, help_text='other abilities', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='users.Ability')),
                ('language', models.OneToOneField(blank=True, default=None, help_text='language abilities', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='users.Language')),
                ('lead_team', models.ForeignKey(blank=True, default=None, help_text='leading team', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leader', to='auth.Group')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_profile_detail', 'View profile detail'),),
            },
        ),
    ]
